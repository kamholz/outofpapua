CREATE OR REPLACE VIEW set_name_auto AS
SELECT set.id,
  ( CASE 
    WHEN set.name IS NOT NULL THEN
      json_build_object('txt', set.name, 'type', 'custom')
    WHEN set.name_entry_id IS NOT NULL THEN (
      SELECT
        json_build_object('txt', language.name || ' ' || entry.headword, 'type', 'entry_manual', 'entry_id', entry.id)
      FROM entry
      JOIN source ON source.id = entry.source_id
      JOIN language ON language.id = source.language_id
      WHERE entry.id = set.name_entry_id
    )
    ELSE (
      SELECT
        json_build_object('txt', language.name || ' ' || entry.headword, 'type', 'entry_auto', 'entry_id', entry.id)
      FROM set_member
      JOIN entry ON entry.id = set_member.entry_id
      JOIN source ON source.id = entry.source_id
      JOIN language ON language.id = source.language_id
      JOIN protolanguage ON protolanguage.id = language.id
      WHERE set_member.set_id = set.id
      ORDER BY NOT protolanguage.prefer_set_name, lower(language.name)
      LIMIT 1
    )
    END
  ) as name_auto
FROM set;

CREATE OR REPLACE VIEW set_name_auto_public AS
SELECT set.id,
  ( CASE 
    WHEN set.name IS NOT NULL THEN
      json_build_object('txt', set.name, 'type', 'custom')
    WHEN set.name_entry_id IS NOT NULL AND (
      SELECT source.public
      FROM entry
      JOIN source ON source.id = entry.source_id
      WHERE entry.id = set.name_entry_id
    ) THEN (
      SELECT
        json_build_object('txt', language.name || ' ' || entry.headword, 'type', 'entry_manual', 'entry_id', entry.id)
      FROM entry
      JOIN source ON source.id = entry.source_id
      JOIN language ON language.id = source.language_id
      WHERE entry.id = set.name_entry_id
    )
    ELSE (
      SELECT
        json_build_object('txt', language.name || ' ' || entry.headword, 'type', 'entry_auto', 'entry_id', entry.id)
      FROM set_member
      JOIN entry ON entry.id = set_member.entry_id
      JOIN source ON source.id = entry.source_id
      JOIN language ON language.id = source.language_id
      JOIN protolanguage ON protolanguage.id = language.id
      WHERE set_member.set_id = set.id
      ORDER BY NOT protolanguage.prefer_set_name, lower(language.name)
      LIMIT 1
    )
    END
  ) as name_auto
FROM set;